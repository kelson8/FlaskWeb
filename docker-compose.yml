services:
  web:
    build: .
    container_name: web
    networks:
      - testing
    volumes:
      # - ./:/data
      - ./data:/app
      # Added new download directory
      - /mnt/docker_volume/flask_downloads:/downloads
#   Re-enable the 127.0.0.1 for prod, testing disabling this for access with Nginx.
#     ports:
# #      - 8010:81
#       - "127.0.0.1:8010:81"
#       # - 5000:5000
    restart: unless-stopped
    command: waitress-serve --port 81 flask_web:app
#    depends_on:
#      - mariadb_flask

  # Test for using Flask behind Nginx, this seems to work like this.
  # TODO Test on VPS, see if this gets the IP behind cloudflare, this doesn't get the IP locally.
  # TODO Possibly add php to this? Not sure if it's needed here.
  nginx:
    image: nginx:latest
    container_name: nginx_web
    networks:
      - testing
    volumes:
      - ./data/nginx/config:/etc/nginx
      - ./logs/nginx:/var/log/nginx/
    ports:
     - 8011:80
      # - "127.0.0.1:8010:80"
      # - 5000:5000
    restart: unless-stopped


  # Disabled mariadb database until I'm ready to use it.
  #mariadb_flask:
    # Using latest version from https://hub.docker.com/r/linuxserver/mariadb/tags
  #  image: lscr.io/linuxserver/mariadb:10.11.6
  #  container_name: mariadb_flask
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
  #    - MYSQL_DATABASE=${DATABASE_NAME}
  #    - MYSQL_USER=${DATABASE_USERNAME}
  #    - MYSQL_PASSWORD=${DATABASE_PASSWORD}
#      - TZ=America/New_York
#    networks:
#      - testing
#    volumes:
#      - ./config:/config
#      - /etc/timezone:/etc/timezone:ro
#      - /etc/localtime:/etc/localtime:ro
#    restart: unless-stopped

networks:
  testing:
    external: true
